$size-xxxl: 3rem; //Space between sections. Is there a better way to do this?
%section-padding {
  padding-top: $size-xxxl;
  padding-bottom: $size-xxxl;

  @include mq($until: bp-l) {
    padding-top: $size-xl;
    padding-bottom: $size-xl;
  }
}
%button_toggle {
  @extend .button;
  @extend .button--l;
  background-color: $color-white-pure;
  border: 1px solid $color-yellow-tribune;
  min-width: 100%;
  float: left;
}

html {
  @extend .font-sansserif;

  //This keeps the footer bar in place
  min-height: 100%;
  position: relative;
}
body {
  margin: 0;
}
.highlight {
  background-color: $color-yellow-tribune;
  width: auto;
  display: inline-block;
  padding-left: $size-xxs;
  padding-right: $size-xxs;
}

// Nav bar
.navbar__logo img {
  height: 23px;
}

// Header
.splash {
  @extend %section-padding;
  background-color: $color-sand;

  .grid_row {
    align-items: center;
  }
}
.splash_header {
  &--headline {
    @extend h1;
    font-weight: bold;
    padding-bottom: $size-l;
    border-bottom: 3px solid $color-yellow-tribune;
    @include mq($from: bp-l) {
      font-size: 2.5rem;
    }
    @include mq($from: bp-xl) {
      font-size: 2.85rem;
    }
  }
  &--description {
    @extend %link--blue;
  }
}
.splash_box {
  background-color: transparentize($color-white-pure, .5);
  padding: $size-s;
}
.rotate_words {
  display: inline;
  span {
    color: $color-yellow-tribune;
    position: absolute;
    opacity: 0;
    overflow: hidden;
    animation: rotateWord 12s linear 0s 2;

    &:nth-child(2) {
      animation-delay: 3s;
    }
    &:nth-child(3) {
      animation-delay: 6s;
    }
    &:nth-child(4) {
      animation: rotateWord 12s linear 9s 1, rotateLastWord 3s linear 21s 1 forwards;
    }
  }
}
@keyframes rotateWord {
    0%   { opacity: 0; }
    2%   { opacity: 0; -webkit-transform: translateY(-30px); transform: translateY(-30px);}
	  5%   { opacity: 1; -webkit-transform: translateY(0px); transform: translateY(0px);}
    17%  { opacity: 1; -webkit-transform: translateY(0px); transform: translateY(0px);}
	  20%  { opacity: 0; -webkit-transform: translateY(30px); transform: translateY(30px);}
	  80%  { opacity: 0; }
    100% { opacity: 0; }
}
@keyframes rotateLastWord {
    0%   { opacity: 0; }
    2%   { opacity: 0; -webkit-transform: translateY(-30px); transform: translateY(-30px);}
	  5%   { opacity: 1; -webkit-transform: translateY(0px); transform: translateY(0px);}
    100%  { opacity: 1; -webkit-transform: translateY(0px); transform: translateY(0px);}
}

// Form
.form_membership {
  .tt_input {
    @extend %input_text--l;
    width: 100%;
    &::placeholder {
      @extend %input_text--placeholder;
    }
  }
  // Hides number input spinner on webkit browsers
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button, {
      -webkit-appearance: none;
      margin: 0;
  }

  .donation {
    font-weight: bold;
    font-size: $size-l;
    padding-bottom: $size-b;
    border-bottom: 1px solid $color-gray-light;
    &--input {
      position: relative;
    }
    &--dollar {
      position: absolute;
      left: $size-xxs;
      top: 0.35rem;
    }
    &--amount {
      font-size: $size-l;
      padding-left: $size-xl;
    }
  }

  .radio_toggle {
    overflow: hidden;
    list-style-type: none;
    li {
      flex: 0 1 33.33333%;
      margin-right: $size-b/2;
      max-width: 100%;
      &:last-child { margin-right: 0; }
    }
    input { //Feels like this could be a utility class
      position: absolute !important;
      clip: rect(0, 0, 0, 0);
      height: 1px;
      width: 1px;
      border: 0;
      overflow: hidden;
    }
    label {
      @extend %button_toggle;

      @include mq($until: bp-s) {
        font-size: $size-xxs;
      }
    }
    input:checked + label {
      @extend %button_toggle;
      background-color: $color-yellow-tribune;
      @include mq($until: bp-s) {
        font-size: $size-xxs;
      }
    }
  }

  .pay_fee {
    align-items: flex-start;
    &--checkbox {
      margin-right: $size-xxs;
      margin-top: 2px;

      @include mq($until: bp-l) {
        width: auto;
        margin-right: 5px;
      }
    }
    &--amount {
      font-weight: bold;
    }
    &--description {
      @extend .font-sansserif;
      font-size: $size-xs;
      color: $color-gray-medium;
    }
  }

  .submit {
    text-align: center;
    .button {
      display: inline-block;
      margin-right: 1%;
      width: 48%;
    }
    .button--applePay {
      background-color: $color-black-pure;
      border-color: $color-black-pure;
      background-image: -webkit-named-image(apple-pay-logo-white);
      background-origin: content-box;
      background-position: 50% 50%;
      background-repeat: no-repeat;
      background-size: 100% 60%;
      margin-right: 0;
    }
  }

  .form-error { //I'd like to rename these classes, but will need to update the JS
    display: none;
    .error-form-message {
      clear: both;
      @extend .font-sansserif;
      font-size: $size-xs;
      color: $color-red;
      text-align: center;
    }
  }
}

// Secret hidden field that sets recurring or one-time payment
#openended_status {
  display: none;
}

// Content
.member_benefits {
  @extend %section-padding;
  border-bottom: 1px solid $color-gray-light;
}
.member_quotes {
  @extend %link--blue;

  &--quote {
      font-size: $size-b;
      color: $color-gray-medium;
  }
  &--attribution {
      font-size: $size-xs;
      text-transform: uppercase;
      font-weight: 700;
      color: $color-teal-gray;
  }
}
.faq {
  @extend %section-padding;
}
.list--bulleted {
  @extend .font-serif;
  li {
    font-size: $size-b;
    margin: 0 0 $size-b $size-m;
    @extend %link--blue;

    &:last-child {
      margin-bottom: 0;
    }
  }
}
.contact {
  @extend %link--blue;
  p {
    @extend .font-sansserif;
    font-size: $size-s;
  }
}
